{"version":3,"sources":["images/shareIcon.svg","images/whiteHeartIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/drinkIcon.svg","images/mealIcon.svg","images/exploreIcon.svg","images/blackHeartIcon.svg","context/ReceitasContext.jsx","pages/Login.jsx","servicesAPI/foodAPI.js","components/SearchBar.jsx","components/Header.jsx","components/Footer.jsx","components/Card.jsx","servicesAPI/drinkAPI.js","components/Categories.jsx","pages/Comidas.jsx","pages/IngredientsList.jsx","components/Recomended.jsx","components/CopyToClipBoard.jsx","components/FavoriteShareButtons.jsx","pages/ReceitaDetalhada.jsx","pages/ListaIngredientesEmProgresso.jsx","pages/Bebidas.jsx","components/CardFavorite.jsx","pages/ReceitasFeitas.jsx","pages/ReceitasFavoritas.jsx","pages/Perfil.jsx","pages/Explorar.jsx","pages/ExplorarBebidas.jsx","pages/ExplorarBebidasIngredientes.jsx","pages/ExplorarComidas.jsx","pages/ExplorarComidasIngredientes.jsx","pages/ExplorarComidasPorLocalOrigem.jsx","pages/NotFound.jsx","pages/ReceitaEmProgresso.jsx","context/ReceitasProvider.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ReceitasContext","createContext","Login","history","useContext","email","setEmail","useState","enable","setEnable","pass","setPass","useEffect","test","className","data-testid","type","placeholder","onChange","target","value","onClick","localStorage","setItem","JSON","stringify","push","disabled","defaultProps","searchFor","a","length","alert","searchType","ingredient","itemName","firstLetter","byId","categories","byCategory","random","listIngredient","byArea","filterByArea","URL","fetch","then","resp","json","catch","error","console","log","message","response","meals","fetchFood","SearchBar","requestAPI","setSearchType","setSearchInput","searchInput","htmlFor","defaultChecked","name","id","Header","disabledSearchIcon","disabledProfileIcon","titleHeader","showSearchBar","setShowSearchBar","profileIcon","to","src","profile","alt","searchIcon","search","titleElement","linkElement","imgSrc","linkTestId","url","style","height","width","Footer","drinkIncon","exploreIcon","mealIcon","Card","imagePath","itemType","indexId","cardType","drinks","fetchDrink","Categories","setCategories","setFilterFood","setFilterDrink","setExecuteFilter","firstRequestAPI","executeSetFilter","prevState","map","index","strCategory","key","Comidas","recipesMeals","setRecipesMeals","setTitleHeader","setDisabledSearchIcon","isFetching","setIsFetching","filterFood","filterIngredient","idMeal","meal","strMealThumb","strMeal","IngredientsList","recipe","recipesDone","recipesInProgress","keyByType","urlByType","recipesInProgLS","parse","getItem","recipesInProg","isDone","find","recipeDone","recipesIsInProg","Object","keys","recipeId","list","ingredientsName","reduce","array","str","includes","concat","measures","measure","createIngredientList","Recomended","isFetchingLocal","setIsFetchingLocal","recomendations","setRecommendations","mounted","data-slide-to","recomendation","inversePrefix","comidas","bebidas","cardRecomendation","CopyToClipBoard","reset","copied","setCopied","setClipboard","pathname","copy","time","setTimeout","clearTimeout","FavoriteButton","testId","page","favoriteRecipes","setFavoriteRecipes","recipeGlobal","recipeObj","isFavorite","setIsFavorite","recipeIsAlreadyFavorite","eachRecipe","eachId","checkFavorite","favoritedRecipe","favoriteIndex","indexOf","slice","obj","area","strArea","category","alcoholicOrNot","strAlcoholic","image","shareIcon","blackHeartIcon","whiteHeartIcon","ReceitaDetalhada","match","keyProps","setRecipeGlobal","path","setRecipe","params","FavoriteShareButtons","strInstructions","title","strYoutube","replace","frameBorder","allow","allowFullScreen","ListaIngredientesEmProgresso","setRecipesDone","setRecipesInProgress","checked","shouldDisable","valueName","split","valueMeasure","isChecked","objIngThatContainsIngName","ingredientIndex","check","doneDate","dateModified","tags","strTags","Bebidas","recipesDrinks","setRecipesDrinks","filterDrink","idDrink","Drink","strDrinkThumb","strDrink","pageType","titlePage","alcoholic","date","tagsRecipe","ReceitasFeitas","filter","setFilter","typeByFilter","Foods","Drinks","feitas","feita","idx","CardFavorite","tagName","idxTag","PagePerfil","userEmail","setUserEmail","localStorageEmail","clear","Explorar","ExplorarBebidas","randomId","setRandomId","ExplorarBebidasIngredientes","setFilterIngredient","ingredientes","setIngredientes","drink","strIngredient1","ExplorarComidas","ExplorarComidasIngredientes","strIngredient","ExplorarComidasPorLocalOrigem","areas","setAreas","filterArea","setFilterArea","areasOption","NotFound","ReceitaEmProgresso","ReceitasProvider","children","hidden","setHidden","setDisabledProfileIcon","executeFilter","filterDisabled","setFilterDisabled","cocktails","isRecovering","setIsRecovering","recipesDoneLS","favoriteRecipesLS","contextValue","keyObj","keyURL","renderEmail","param","Provider","App","component","ReceitasFavoritas","Perfil","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e3e7972.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","import { createContext } from 'react';\n\nconst ReceitasContext = createContext();\n\nexport default ReceitasContext;\n","import React, { useState, useEffect, useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction Login({ history }) {\n  const { email, setEmail } = useContext(ReceitasContext);\n  const [enable, setEnable] = useState(false);\n  const [pass, setPass] = useState('');\n\n  function handleClick() {\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n    history.push('/comidas');\n    setEnable(false);\n  }\n\n  useEffect(() => {\n    const seven = /.{7,}/;\n    const reg = /^((?!\\.)[\\w-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/;\n    setEnable(reg.test(email) && seven.test(pass));\n  }, [email, pass]);\n\n  return (\n    <section className=\"login-container\">\n      <h2 className=\"login-title\">APP DE RECEITAS</h2>\n      <section className=\"login-input-btn\">\n        <div className=\"login-image\" />\n        <section className=\"login-inputs\">\n          <input\n            className=\"login-email\"\n            data-testid=\"email-input\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={ ({ target }) => setEmail(target.value) }\n          />\n          <input\n            className=\"login-pass\"\n            data-testid=\"password-input\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={ ({ target }) => setPass(target.value) }\n          />\n          <section className=\"login-button-container\">\n            <button\n              onClick={ () => { handleClick(); } }\n              data-testid=\"login-submit-btn\"\n              type=\"button\"\n              className=\"login-button\"\n              disabled={ !enable }\n            >\n              Entrar\n            </button>\n          </section>\n        </section>\n      </section>\n    </section>\n  );\n}\n\nLogin.defaultProps = {\n  history: '/app-receitas/',\n};\n\nLogin.propTypes = {\n  history: propTypes.shape(),\n};\n\nexport default Login;\n","async function fetchFood(searchFor, value) {\n  const zero = 0;\n  if (searchFor === 'firstLetter' && (value.length > 1 || value.length === zero)) {\n    // eslint-disable-next-line no-alert\n    alert('Sua busca deve conter somente 1 (um) caracter');\n    return;\n  }\n  const baseURL = 'https://www.themealdb.com/api/json/v1/1/';\n  const searchType = {\n    ingredient: 'filter.php?i=',\n    itemName: 'search.php?s=',\n    firstLetter: 'search.php?f=',\n    byId: 'lookup.php?i=',\n    categories: 'list.php?c=list',\n    byCategory: 'filter.php?c=',\n    random: 'random.php',\n    listIngredient: 'list.php?i=list',\n    byArea: 'list.php?a=list',\n    filterByArea: 'filter.php?a=',\n  };\n  const URL = `${baseURL}${searchType[searchFor]}${value}`;\n  const response = await fetch(URL)\n    .then((resp) => resp.json())\n    .catch((error) => {\n      console.log(`Deu erro: ${error.message}`);\n    });\n  return response.meals;\n}\n\nexport default fetchFood;\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction SearchBar({ requestAPI }) {\n  const { setSearchType, setSearchInput, searchInput } = useContext(ReceitasContext);\n  const one = /.{1,}/;\n\n  return (\n    <nav className=\"searchBar-container\">\n      <section className=\"searchBar-radios\">\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"ingrediente\">\n            <input\n              data-testid=\"ingredient-search-radio\"\n              onClick={ () => setSearchType('ingredient') }\n              type=\"radio\"\n              defaultChecked\n              name=\"radio\"\n              id=\"ingrediente\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Ingrediente\n          </label>\n        </section>\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"first-letter\">\n            <input\n              onClick={ () => setSearchType('firstLetter') }\n              data-testid=\"first-letter-search-radio\"\n              type=\"radio\"\n              name=\"radio\"\n              id=\"first-letter\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Primeira letra\n          </label>\n        </section>\n        <section className=\"searchBar-radio\">\n          <label className=\"search-label\" htmlFor=\"name\">\n            <input\n              onClick={ () => setSearchType('itemName') }\n              data-testid=\"name-search-radio\"\n              type=\"radio\"\n              name=\"radio\"\n              id=\"name\"\n              className=\"radio\"\n            />\n            {/* <span className=\"checkmark\" /> */}\n            Nome\n          </label>\n        </section>\n        <button\n          onClick={ requestAPI }\n          type=\"button\"\n          data-testid=\"exec-search-btn\"\n          disabled={ searchInput < one }\n          className=\"searchBar-buscar\"\n        >\n          Buscar\n        </button>\n      </section>\n      <input\n        onChange={ ({ target }) => setSearchInput(target.value) }\n        type=\"text\"\n        data-testid=\"search-input\"\n        className=\"searchBar-input\"\n        placeholder=\"Digite aqui...\"\n      />\n    </nav>\n  );\n}\n\nSearchBar.propTypes = {\n  requestAPI: propTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React, { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport profile from '../images/profileIcon.svg';\nimport search from '../images/searchIcon.svg';\nimport ReceitasContext from '../context/ReceitasContext';\nimport SearchBar from './SearchBar';\n\nfunction Header({ requestAPI }) {\n  const { disabledSearchIcon, disabledProfileIcon,\n    titleHeader, showSearchBar, setShowSearchBar } = useContext(ReceitasContext);\n\n  function toggleSearchBar() {\n    if (!showSearchBar) setShowSearchBar(true);\n    if (showSearchBar) setShowSearchBar(false);\n  }\n\n  const profileIcon = (\n    <Link to=\"/perfil\">\n      <img data-testid=\"profile-top-btn\" src={ profile } alt=\"\" />\n    </Link>\n  );\n\n  const searchIcon = (\n    <button className=\"header-icon-search\" type=\"button\" onClick={ toggleSearchBar }>\n      <img data-testid=\"search-top-btn\" src={ search } alt=\"\" />\n    </button>\n  );\n\n  const titleElement = (<h3 data-testid=\"page-title\">{ titleHeader }</h3>);\n\n  return (\n    <header className=\"header-container\">\n      <div className=\"header-icons\">\n        { (disabledSearchIcon) ? '' : searchIcon }\n        { titleElement }\n        { (disabledProfileIcon) ? '' : profileIcon }\n      </div>\n      {showSearchBar && (\n        <div className=\"header-searchBar\">\n          <SearchBar requestAPI={ requestAPI } />\n        </div>\n      )}\n    </header>\n  );\n}\n\nHeader.defaultProps = {\n  requestAPI: () => null,\n};\n\nHeader.propTypes = {\n  requestAPI: propTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIncon from '../images/drinkIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\n\nconst linkElement = (imgSrc, linkTestId, url) => (\n  <Link\n    to={ url }\n    data-testid={ linkTestId }\n    src={ imgSrc }\n    alt=\"\"\n    style={ { height: '50px', width: '50px' } }\n    className=\"footer-icon\"\n  >\n    <img src={ imgSrc } alt=\"\" />\n  </Link>\n);\n\nfunction Footer() {\n  return (\n    <footer data-testid=\"footer\" className=\"footer-container\">\n      <section className=\"footer-icons\">\n        { linkElement(drinkIncon, 'drinks-bottom-btn', '/bebidas') }\n        { linkElement(exploreIcon, 'explore-bottom-btn', '/explorar') }\n        { linkElement(mealIcon, 'food-bottom-btn', '/comidas') }\n      </section>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction Card({ imagePath, itemName, id, itemType, indexId, cardType }) {\n  return (\n    <div data-testid={ `${indexId}-${cardType}-card` } className=\"card-container\">\n      <div className=\"card-datails\">\n        <Link className=\"card-details-link\" to={ `/${itemType}/${id}` }>\n          <img\n            data-testid={ `${indexId}-card-img` }\n            alt=\"recipe cover\"\n            className=\"card-image\"\n            src={ imagePath }\n          />\n          <div data-testid={ `${indexId}-card-name` } className=\"card-info\">\n            <h4 className=\"card-title\">{itemName}</h4>\n          </div>\n          {id && <button type=\"button\" className=\"card-ver-receita\">ver receita</button>}\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  imagePath: propTypes.string.isRequired,\n  itemName: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  itemType: propTypes.string.isRequired,\n  indexId: propTypes.number.isRequired,\n  cardType: propTypes.string.isRequired,\n};\n\nexport default Card;\n","async function fetchDrink(searchFor, value) {\n  const zero = 0;\n  if (searchFor === 'firstLetter' && (value.length > 1 || value.length === zero)) {\n    // eslint-disable-next-line no-alert\n    alert('Sua busca deve conter somente 1 (um) caracter');\n    return;\n  }\n  const baseURL = 'https://www.thecocktaildb.com/api/json/v1/1/';\n  const searchType = {\n    ingredient: 'filter.php?i=',\n    itemName: 'search.php?s=',\n    firstLetter: 'search.php?f=',\n    byId: 'lookup.php?i=',\n    categories: 'list.php?c=list',\n    byCategory: 'filter.php?c=',\n    random: 'random.php',\n    listIngredient: 'list.php?i=list',\n  };\n  const URL = `${baseURL}${searchType[searchFor]}${value}`;\n  const response = await fetch(URL)\n    .then((resp) => resp.json())\n    .catch((error) => {\n      console.log(`Deu erro: ${error.message}`);\n    });\n  return response.drinks;\n}\n\nexport default fetchDrink;\n","import React, { useState, useEffect, useContext } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport fetchDrink from '../servicesAPI/drinkAPI';\n\nfunction Categories({ type }) {\n  const [categories, setCategories] = useState([]);\n  const { setFilterFood, setFilterDrink, setExecuteFilter } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    const firstRequestAPI = async () => {\n      const response = (type === 'meals')\n        ? await fetchFood('categories', '')\n        : await fetchDrink('categories', '');\n      setCategories(response);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const executeSetFilter = (value) => {\n    setExecuteFilter(true);\n    if (type === 'meals') {\n      setFilterFood((prevState) => (prevState === value ? '' : value));\n    } else {\n      setFilterDrink((prevState) => (prevState === value ? '' : value));\n    }\n  };\n\n  const maxCategoriesPerPage = 5;\n  return (\n    <div className=\"category-container\">\n      { categories.map(({ strCategory }, index) => (\n        (index < maxCategoriesPerPage)\n          ? (\n            <button\n              key={ index }\n              type=\"button\"\n              data-testid={ `${strCategory}-category-filter` }\n              value={ strCategory }\n              onClick={ ({ target }) => executeSetFilter(target.value) }\n            >\n              { strCategory }\n            </button>\n          )\n          : ''\n      )) }\n      <button\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        value=\"All\"\n        onClick={ ({ target }) => executeSetFilter(target.value) }\n      >\n        All\n      </button>\n    </div>\n  );\n}\n\nexport default Categories;\n\nCategories.propTypes = {\n  type: propTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\n\nfunction Comidas({ history }) {\n  const { recipesMeals, setRecipesMeals, setShowSearchBar,\n    setTitleHeader, setDisabledSearchIcon,\n    isFetching, setIsFetching, searchType,\n    searchInput, filterFood, filterIngredient } = useContext(ReceitasContext);\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader('Comidas');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (filterFood) {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        const response = (filterFood === '' || filterFood === 'All')\n          ? await fetchFood('itemName', '')\n          : await fetchFood('byCategory', filterFood);\n        setRecipesMeals(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    } else {\n      setIsFetching(true);\n      const firstRequestAPI = async () => {\n        const response = (filterIngredient === '')\n          ? await fetchFood('itemName', '')\n          : await fetchFood('ingredient', filterIngredient);\n        setRecipesMeals(response);\n        setIsFetching(false);\n      };\n      firstRequestAPI();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterFood, filterIngredient]);\n\n  return (\n    <main className=\"comidas-container\">\n      <header>\n        <Header\n          requestAPI={ async () => {\n            const response = await fetchFood(searchType, searchInput);\n            if (response && response.length === 1) {\n              history.push(`/comidas/${response[0].idMeal}`);\n            }\n            if (response) {\n              setRecipesMeals(response);\n            } else {\n              // eslint-disable-next-line no-alert\n              alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n            }\n          } }\n        />\n      </header>\n      <section className=\"comidas-body\">\n        <section className=\"comidas-filters\">\n          <Categories type=\"meals\" />\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipesMeals.map((meal, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ meal.strMealThumb }\n                itemName={ meal.strMeal }\n                id={ meal.idMeal }\n                itemType=\"comidas\"\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nComidas.propTypes = {\n  history: propTypes.shape().isRequired,\n};\n\nexport default Comidas;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction IngredientsList({ recipe, type }) {\n  const { recipesDone, recipesInProgress } = useContext(ReceitasContext);\n\n  // Configuração de chaves e id conforme tipo da receita\n  const id = recipe[`id${(type === 'meal') ? 'Meal' : 'Drink'}`];\n  const keyByType = (type === 'meal') ? 'meals' : 'cocktails';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n\n  // Recebe as receitas em progresso do local storage ou do estado global\n  const recipesInProgLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const recipesInProg = (recipesInProgLS !== null) ? recipesInProgLS : recipesInProgress;\n\n  // Verificação se a receita está em progresso e se está feita\n  const isDone = recipesDone.find((recipeDone) => recipeDone.id === id);\n  const recipesIsInProg = Object.keys(recipesInProg[keyByType])\n    .find((recipeId) => recipeId === id) === id;\n\n  // Criação do array de ingredientes com o controle checked\n  const createIngredientList = () => {\n    const keys = Object.keys(recipe);\n    const ingredientsName = keys.reduce((array, key) => {\n      const str = recipe[key];\n      const condition = (key.includes('strIngredient') && str !== '' && str !== null);\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const measures = keys.reduce((array, key) => {\n      const str = (recipe[key] !== ' ' && recipe[key] !== null) ? recipe[key] : '';\n      const condition = key.includes('strMeasure');\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const ingredients = ingredientsName.map((name, index) => ({\n      name,\n      measure: measures[index],\n    }));\n\n    return ingredients;\n  };\n\n  const list = createIngredientList();\n\n  return (\n    <div>\n      <h4 className=\"detalhes-ingredients-title\">Ingredientes</h4>\n      <section className=\"detalhes-ingredients\">\n        { list\n          .map((ingredient, index) => {\n            const { name, measure } = ingredient;\n            return (\n              <span\n                data-testid={ `${index}-ingredient-name-and-measure` }\n                key={ index }\n                className=\"ingredient\"\n              >\n                {`${name}${' -'}${'- '}${measure}`}\n              </span>\n            );\n          })}\n      </section>\n      {!isDone\n      && (\n        <Link className=\"detalhes-btn-link\" to={ `/${urlByType}/${id}/in-progress` }>\n          <button\n            type=\"button\"\n            data-testid=\"start-recipe-btn\"\n            className=\"detalhes-new-recipe-btn\"\n          >\n            {!recipesIsInProg ? 'Iniciar Receita' : 'Continuar Receita'}\n          </button>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nexport default IngredientsList;\n\nIngredientsList.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport fetchFood from '../servicesAPI/foodAPI';\n\nfunction Recomended({ itemType }) {\n  const [isFetchingLocal, setIsFetchingLocal] = useState(false);\n  const [recomendations, setRecommendations] = useState([]);\n  const six = 6;\n\n  useEffect(() => {\n    let mounted = true;\n    setIsFetchingLocal(true);\n    const firstRequestAPI = async () => {\n      const response = (itemType === 'comidas')\n        ? await fetchFood('itemName', '')\n        : await fetchDrink('itemName', '');\n      if (mounted) {\n        setRecommendations(response);\n        setIsFetchingLocal(false);\n      }\n    };\n    firstRequestAPI();\n    return () => { mounted = false; };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const cardRecomendation = (recomendation, indexId) => {\n    const inversePrefix = { comidas: 'Meal', bebidas: 'Drink' };\n    const { [`str${inversePrefix[itemType]}Thumb`]: imagePath,\n      [`id${inversePrefix[itemType]}`]: id,\n      [`str${inversePrefix[itemType]}`]: itemName } = recomendation;\n\n    return (\n      <div\n        key={ indexId }\n        data-testid={ `${indexId}-recomendation-card` }\n        className=\"recomended-list\"\n      >\n        <div className=\"recomended-datails\">\n          <Link className=\"recomended-details-link\" to={ `/${itemType}/${id}` }>\n            <div className=\"recomended-img-body\">\n              <img\n                data-testid={ `${indexId}-card-img` }\n                alt=\"recipe cover\"\n                className=\"recomended-image\"\n                src={ imagePath }\n              />\n            </div>\n            <div\n              data-testid={ `${indexId}-recomendation-title` }\n              className=\"recomended-info\"\n            >\n              <h4 className=\"recomended-title\">{itemName}</h4>\n            </div>\n          </Link>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div data-slide-to=\"2\" className=\"recomended-container\">\n      { isFetchingLocal\n        ? <h2>Loading...</h2>\n        : (recomendations.map((recomendation, index) => ((index < six)\n          ? cardRecomendation(recomendation, index)\n          : '')))}\n    </div>\n  );\n}\n\nRecomended.propTypes = {\n  itemType: propTypes.string.isRequired,\n};\n\nexport default Recomended;\n","import { useState, useEffect } from 'react';\r\nimport copy from 'clipboard-copy';\r\n\r\nconst CopyToClipBoard = (reset = null) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const setClipboard = (pathname) => {\r\n    copy(`https://gui-alucard.github.io${pathname}`);\r\n    setCopied(true);\r\n  };\r\n  useEffect(() => {\r\n    let time;\r\n    if (copied && reset) {\r\n      time = setTimeout(() => setCopied(false), reset);\r\n    }\r\n    return () => {\r\n      clearTimeout(time);\r\n    };\r\n  }, [copied, reset]);\r\n  return [copied, setClipboard];\r\n};\r\nexport default CopyToClipBoard;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport ReceitasContext from '../context/ReceitasContext';\r\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\r\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\r\nimport shareIcon from '../images/shareIcon.svg';\r\nimport CopyToClipBoard from './CopyToClipBoard';\r\n\r\nfunction FavoriteButton({ recipeId, type, testId = '', page = '' }) {\r\n  const { favoriteRecipes, setFavoriteRecipes, recipeGlobal, recipesDone,\r\n    isFetching, setIsFetching } = useContext(ReceitasContext);\r\n  const textTime = 3000;\r\n  const [copied, setClipboard] = CopyToClipBoard(textTime);\r\n\r\n  // Configuração de chaves e id conforme tipo da receita\r\n  const id = recipeId;\r\n  let recipe;\r\n  if (page === 'recipes-done') {\r\n    recipe = recipesDone.find((recipeObj) => recipeObj.id === id);\r\n  } else if (page === 'favorite-recipes') {\r\n    recipe = favoriteRecipes.find((recipeObj) => recipeObj.id === id);\r\n  } else {\r\n    recipe = recipeGlobal;\r\n  }\r\n\r\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\r\n  const [isFavorite, setIsFavorite] = useState('');\r\n\r\n  // Ao montar\r\n  useEffect(() => {\r\n    setIsFetching(true);\r\n    const recipesInFavorite = favoriteRecipes;\r\n\r\n    const recipeIsAlreadyFavorite = recipesInFavorite\r\n      .map((eachRecipe) => eachRecipe.id).find((eachId) => eachId === id) === id;\r\n\r\n    setIsFavorite(recipeIsAlreadyFavorite);\r\n    setIsFetching(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Atualiza quando o estado local mudar (isFavorite)\r\n  const checkFavorite = () => {\r\n    // Se for false inclui a receita em favoriteRecipes\r\n    // Se for true exclui a receita em favoriteRecipes\r\n    if (!isFavorite) {\r\n      setFavoriteRecipes((prevState) => {\r\n        const zero = 0;\r\n        const favoritedRecipe = prevState\r\n          .find((eachRecipe) => eachRecipe.id === id);\r\n        const favoriteIndex = prevState.indexOf(favoritedRecipe);\r\n        const obj = (page === '')\r\n          ? {\r\n            id,\r\n            type: type === 'meal' ? 'comida' : 'bebida',\r\n            area: recipe.strArea || '',\r\n            category: recipe.strCategory,\r\n            alcoholicOrNot: type === 'meal' ? '' : recipe.strAlcoholic,\r\n            name: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}`],\r\n            image: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}Thumb`],\r\n          }\r\n          : {\r\n            id,\r\n            type: recipe.type,\r\n            area: recipe.area || '',\r\n            category: recipe.category,\r\n            alcoholicOrNot: recipe.alcoholicOrNot,\r\n            name: recipe.name,\r\n            image: recipe.image,\r\n          };\r\n        return ([\r\n          ...prevState.slice(zero, favoriteIndex),\r\n          obj,\r\n          ...prevState.slice(favoriteIndex + 1),\r\n        ]);\r\n      });\r\n      setIsFavorite((prevState) => !prevState);\r\n    } else {\r\n      setFavoriteRecipes((prevState) => {\r\n        const zero = 0;\r\n        const favoritedRecipe = prevState\r\n          .find((eachRecipe) => eachRecipe.id === id);\r\n        const favoriteIndex = prevState.indexOf(favoritedRecipe);\r\n        return ([\r\n          ...prevState.slice(zero, favoriteIndex),\r\n          ...prevState.slice(favoriteIndex + 1),\r\n        ]);\r\n      });\r\n      setIsFavorite((prevState) => !prevState);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  };\r\n\r\n  const checkPageBeforeRenderBtns = () => {\r\n    if (page === 'recipes-done') {\r\n      return (\r\n        <section className=\"detalhes-buttons\">\r\n          <button\r\n            data-testid={ testId === ''\r\n              ? 'share-btn' : `${testId}-horizontal-share-btn` }\r\n            type=\"button\"\r\n            className=\"detalhes-share\"\r\n            onClick={ () => setClipboard(`/${urlByType}/${id}`) }\r\n            src={ shareIcon }\r\n          >\r\n            <img src={ shareIcon } alt=\"compartilhe\" />\r\n            { copied ? <span className=\"share-copiado\">Link copiado!</span> : true }\r\n          </button>\r\n        </section>\r\n      );\r\n    }\r\n    return (\r\n      <section className=\"detalhes-buttons\">\r\n        <button\r\n          data-testid={ testId === ''\r\n            ? 'favorite-btn' : `${testId}-horizontal-favorite-btn` }\r\n          type=\"button\"\r\n          className=\"detalhes-fav\"\r\n          onClick={ checkFavorite }\r\n          src={ isFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\r\n        >\r\n          <img\r\n            src={ isFavorite ? blackHeartIcon : whiteHeartIcon }\r\n            alt=\"compartilhe\"\r\n          />\r\n        </button>\r\n        <button\r\n          data-testid={ testId === ''\r\n            ? 'share-btn' : `${testId}-horizontal-share-btn` }\r\n          type=\"button\"\r\n          className=\"detalhes-share\"\r\n          onClick={ () => setClipboard(`/${urlByType}/${id}`) }\r\n          src={ shareIcon }\r\n        >\r\n          <img src={ shareIcon } alt=\"compartilhe\" />\r\n          { copied ? <span className=\"share-copiado\">Link copiado!</span> : true }\r\n        </button>\r\n      </section>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      {!isFetching && checkPageBeforeRenderBtns()}\r\n    </section>\r\n  );\r\n}\r\n\r\n// FavoriteButton.defaultProps = {\r\n//   testId: 'favorite-btn',\r\n// };\r\n\r\nFavoriteButton.propTypes = {\r\n  type: propTypes.string.isRequired,\r\n  testId: propTypes.string.isRequired,\r\n  recipeId: propTypes.string.isRequired,\r\n  page: propTypes.string.isRequired,\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport IngredientsList from './IngredientsList';\nimport ReceitasContext from '../context/ReceitasContext';\nimport Recomended from '../components/Recomended';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport FavoriteShareButtons from '../components/FavoriteShareButtons';\n\nfunction ReceitaDetalhada({ match }) {\n  const { setIsFetching, isFetching, keyProps,\n    setRecipeGlobal } = useContext(ReceitasContext);\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const [recipe, setRecipe] = useState([]);\n  const { id } = match.params;\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('byId', id)\n        : await fetchDrink('byId', id);\n      setRecipe(...response);\n      setRecipeGlobal(...response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [type]);\n\n  return (\n    <main className=\"detalhes-main\">\n      {isFetching\n        ? <h2>Loading...</h2>\n        : (\n          <section>\n            <header className=\"detalhes-header\">\n              <section className=\"detalhes-img\">\n                <section className=\"detalhes-img-border\">\n                  <img\n                    data-testid=\"recipe-photo\"\n                    src={ recipe[`str${keyProps[type]}Thumb`] }\n                    alt=\"\"\n                  />\n                </section>\n              </section>\n              <section className=\"detalhes-bar\">\n                <h3 data-testid=\"recipe-title\" className=\"detalhes-title\">\n                  { recipe[`str${keyProps[type]}`] }\n                </h3>\n                <h4 data-testid=\"recipe-category\" className=\"detalhes-subtitle\">\n                  { recipe[type === 'meal' ? 'strCategory' : 'strAlcoholic'] }\n                </h4>\n                <FavoriteShareButtons recipeId={ id } type={ type } />\n              </section>\n            </header>\n            <article className=\"detalhes-article\">\n              <IngredientsList recipe={ recipe } type={ type } />\n              <hr />\n              <section className=\"detalhes-instructions-container\">\n                <h4 className=\"detalhes-titles\">Instruções de preparo</h4>\n                <section className=\"detalhes-instructions\">\n                  <p data-testid=\"instructions\">{recipe.strInstructions}</p>\n                  {type === 'meal' && (\n                    <section className=\"detalhes-video\">\n                      <iframe\n                        title={ `Como Fazer ${recipe[`str${keyProps[type]}`]}` }\n                        data-testid=\"video\"\n                        width=\"560\"\n                        height=\"315\"\n                        src={ !recipe.strYoutube\n                          ? <h2>Loading...</h2>\n                          : recipe.strYoutube.replace('watch?v=', 'embed/') }\n                        frameBorder=\"0\"\n                        allow=\"accelerometer;\n                          encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                      />\n                    </section>\n                  )}\n                </section>\n              </section>\n              <hr />\n              <h4 className=\"detalhes-titles\">Recomendações de acompanhamento</h4>\n              <section className=\"detalhes-list-recomended\">\n                <Recomended itemType={ type === 'meal' ? 'bebidas' : 'comidas' } />\n              </section>\n            </article>\n          </section>\n        )}\n    </main>\n  );\n}\n\nReceitaDetalhada.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ReceitaDetalhada;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ListaIngredientesEmProgresso({ recipe, type }) {\n  const { setRecipesDone,\n    recipesInProgress, setRecipesInProgress,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n\n  // Configuração de chaves e id conforme tipo da receita\n  const id = recipe[`id${(type === 'meal') ? 'Meal' : 'Drink'}`];\n  const keyByType = (type === 'meal') ? 'meals' : 'cocktails';\n  const urlByType = (type === 'meal') ? 'comidas' : 'bebidas';\n\n  // Recebe as receitas em progresso do do estado global\n  const recipesInProg = recipesInProgress;\n\n  // Verificação se a receita está em progresso\n  const recipesIsInProg = Object.keys(recipesInProg[keyByType])\n    .find((recipeId) => recipeId === id) === id;\n\n  // Criação do array de ingredientes com o controle checked\n  const createIngredientList = () => {\n    const keys = Object.keys(recipe);\n    const ingredientsName = keys.reduce((array, key) => {\n      const str = recipe[key];\n      const condition = (key.includes('strIngredient') && str !== '' && str !== null);\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const measures = keys.reduce((array, key) => {\n      const str = (recipe[key] !== ' ' && recipe[key] !== null) ? recipe[key] : '';\n      const condition = key.includes('strMeasure');\n      return (condition) ? array.concat(str) : array;\n    }, []);\n\n    const ingredients = ingredientsName.map((name, index) => ({\n      name,\n      measure: measures[index],\n      checked: false,\n    }));\n\n    return ingredients;\n  };\n\n  // Ao montar o componente\n  useEffect(() => {\n    setIsFetching(true);\n    if (!recipesIsInProg) {\n      setRecipesInProgress((prevState) => ({\n        ...prevState,\n        [keyByType]: {\n          ...prevState[keyByType],\n          [id]: createIngredientList(),\n        },\n      }));\n    }\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Ao finalizar receita atualiza o estado global e o local storage\n  function finishRecipe() {\n    setRecipesDone((prevState) => ([\n      ...prevState,\n      {\n        id,\n        type: type === 'meal' ? 'comida' : 'bebida',\n        area: recipe.strArea || '',\n        category: recipe.strCategory,\n        alcoholicOrNot: type === 'meal' ? '' : recipe.strAlcoholic,\n        image: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}Thumb`],\n        name: recipe[`str${(type === 'meal') ? 'Meal' : 'Drink'}`],\n        doneDate: recipe.dateModified,\n        tags: (recipe.strTags !== null) ? recipe.strTags.split(',') : [],\n      },\n    ]));\n    delete recipesInProgress[keyByType][id];\n  }\n\n  // Ao dar check atualiza o estado global e o local storage\n  const check = ({ target }) => {\n    const { value, checked } = target;\n    const valueName = value.split('-medida-')[0];\n    const valueMeasure = value.split('-medida-')[1];\n    const isChecked = !(checked === false);\n    const zero = 0;\n    setRecipesInProgress((prevState) => {\n      if (prevState) {\n        const objIngThatContainsIngName = prevState[keyByType][id]\n          .find((ingredient) => ingredient.name === valueName\n            && ingredient.measure === valueMeasure);\n\n        const ingredientIndex = prevState[keyByType][id]\n          .indexOf(objIngThatContainsIngName);\n        return ({\n          ...prevState,\n          [keyByType]: {\n            ...prevState[keyByType],\n            [id]: [\n              ...prevState[keyByType][id].slice(zero, ingredientIndex),\n              { ...prevState[keyByType][id][ingredientIndex], checked: isChecked },\n              ...prevState[keyByType][id].slice(ingredientIndex + 1),\n            ],\n          },\n        });\n      }\n    });\n  };\n\n  const list = (recipesIsInProg) ? recipesInProg[keyByType][id] : createIngredientList();\n\n  const shouldDisable = list && list\n    .map((ingredient) => ingredient.checked).includes(false);\n\n  return (\n    <div>\n      {list ? (\n        <div>\n          <h4 className=\"detalhes-ingredients-title\">Ingredientes</h4>\n          <section className=\"detalhes-ingredients\">\n            {!isFetching && list\n              .map((ingredient, index) => {\n                const { name, measure, checked } = ingredient;\n                return (\n                  <label\n                    key={ index }\n                    htmlFor={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                    className=\"ingredient\"\n                  >\n                    <input\n                      id={ index }\n                      key={ index }\n                      type=\"checkbox\"\n                      onChange={ ({ target }) => check({ target }, index) }\n                      checked={ checked }\n                      value={ `${name}-medida-${measure}` }\n                    />\n                    {`${name}${' -'}${'- '}${measure}`}\n                  </label>\n                );\n              })}\n          </section>\n          <div>\n            {list\n            && (\n              <Link className=\"detalhes-btn-link\" to=\"/receitas-feitas\">\n                <button\n                  className=\"detalhes-new-recipe-btn\"\n                  data-testid=\"finish-recipe-btn\"\n                  type=\"button\"\n                  onClick={ () => finishRecipe() }\n                  disabled={ shouldDisable }\n                >\n                  Finalizar Receita\n                </button>\n              </Link>\n            )}\n            <Link className=\"detalhes-btn-link\" to={ `/${urlByType}` }>\n              <span className=\"detalhes-save-recipe-btn\">Salvar Para Mais Tarde</span>\n            </Link>\n          </div>\n        </div>\n      ) : <div>loading</div>}\n    </div>\n  );\n}\n\nexport default ListaIngredientesEmProgresso;\n\nListaIngredientesEmProgresso.propTypes = {\n  recipe: propTypes.objectOf(propTypes.string).isRequired,\n  type: propTypes.string.isRequired,\n};\n","import React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Card from '../components/Card';\nimport Categories from '../components/Categories';\n\nfunction Bebidas({ history }) {\n  const { recipesDrinks, setRecipesDrinks, setShowSearchBar,\n    setTitleHeader, setDisabledSearchIcon,\n    isFetching, setIsFetching, searchType,\n    searchInput, filterDrink, filterIngredient } = useContext(ReceitasContext);\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader('Bebidas');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (filterDrink === '' || filterDrink === 'All')\n        ? await fetchDrink('itemName', '')\n        : await fetchDrink('byCategory', filterDrink);\n      setRecipesDrinks(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterDrink]);\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (filterIngredient === '' || filterIngredient === 'All')\n        ? await fetchDrink('itemName', '')\n        : await fetchDrink('ingredient', filterIngredient);\n      setRecipesDrinks(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterIngredient]);\n\n  return (\n    <main className=\"bebidas-container\">\n      <header>\n        <Header\n          requestAPI={ async () => {\n            const response = await fetchDrink(searchType, searchInput);\n            if (response && response.length === 1) {\n              history.push(`/bebidas/${response[0].idDrink}`);\n            }\n            if (response) {\n              setRecipesDrinks(response);\n            } else {\n              // eslint-disable-next-line no-alert\n              alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n            }\n          } }\n        />\n      </header>\n      <section className=\"bebidas-body\">\n        <section className=\"bebidas-filters\">\n          <Categories type=\"drinks\" />\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipesDrinks.map((Drink, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ Drink.strDrinkThumb }\n                itemName={ Drink.strDrink }\n                id={ Drink.idDrink }\n                itemType=\"bebidas\"\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nBebidas.propTypes = {\n  history: propTypes.shape().isRequired,\n};\n\nexport default Bebidas;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport FavoriteShareButtons from './FavoriteShareButtons';\n\nfunction Card({ imagePath, itemName, id, itemType, titlePage, pageType,\n  indexId, cardType, area, category, alcoholic, date, tagsRecipe }) {\n  const iconsAccordingPage = (title) => {\n    if (title === 'Receitas Favoritas') {\n      return (\n        <section className=\"card-buttons\">\n          <FavoriteShareButtons\n            recipeId={ id }\n            type={ itemType === 'comidas' ? 'meal' : 'drink' }\n            testId={ indexId }\n            page={ pageType }\n          />\n        </section>\n      );\n    }\n    return (\n      <section className=\"card-buttons\">\n        <FavoriteShareButtons\n          recipeId={ id }\n          type={ itemType === 'comidas' ? 'meal' : 'drink' }\n          testId={ indexId }\n          page={ pageType }\n        />\n      </section>\n    );\n  };\n\n  const foodOrDrink = () => {\n    if (area && category) {\n      return (\n        <span data-testid={ `${indexId}-${cardType}-top-text` }>\n          {`${area} - `}\n          {`${category}`}\n        </span>\n      );\n    }\n    return (\n      <span data-testid={ `${indexId}-${cardType}-top-text` }>\n        {alcoholic}\n      </span>\n    );\n  };\n\n  return (\n    <div data-testid={ `${indexId}-${cardType}-card` } className=\"card-container\">\n      <div className=\"card-datails\">\n        <Link className=\"card-details-link\" to={ `/${itemType}/${id}` }>\n          <div className=\"card-info\">\n            <h4\n              data-testid={ `${indexId}-${cardType}-name` }\n              className=\"card-title\"\n            >\n              {foodOrDrink()}\n              {' - '}\n              {itemName}\n            </h4>\n            <img\n              data-testid={ `${indexId}-${cardType}-image` }\n              alt=\"recipe cover\"\n              className=\"card-image\"\n              src={ imagePath }\n            />\n            <div className=\"card-date-container\">\n              <div\n                data-testid={ `${indexId}-${cardType}-done-date` }\n                className=\"card-date\"\n              >\n                {date}\n              </div>\n            </div>\n          </div>\n        </Link>\n        <div className=\"card-clickable\">\n          <div className=\"card-tags\">\n            {tagsRecipe}\n          </div>\n          <div className=\"card-icons\">\n            {iconsAccordingPage(titlePage)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCard.defaultProps = {\n  date: '',\n  tagsRecipe: [],\n};\n\nCard.propTypes = {\n  imagePath: propTypes.string.isRequired,\n  itemName: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  itemType: propTypes.string.isRequired,\n  indexId: propTypes.number.isRequired,\n  cardType: propTypes.string.isRequired,\n  area: propTypes.string.isRequired,\n  category: propTypes.string.isRequired,\n  alcoholic: propTypes.string.isRequired,\n  titlePage: propTypes.string.isRequired,\n  tagsRecipe: propTypes.arrayOf(propTypes.shape()),\n  date: propTypes.string,\n  pageType: propTypes.string.isRequired,\n};\n\nexport default Card;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport CardFavorite from '../components/CardFavorite';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ReceitasFeitas() {\n  const { isFetching, setIsFetching, setTitleHeader, recipesDone,\n    setDisabledSearchIcon, setShowSearchBar } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setIsFetching(true);\n    setTitleHeader('Receitas Feitas');\n    setDisabledSearchIcon(true);\n    setShowSearchBar(false);\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [filter, setFilter] = useState('All');\n  const typeByFilter = { Foods: 'comida', Drinks: 'bebida' };\n  const feitas = (filter === 'All') ? recipesDone : recipesDone\n    .filter((recipe) => recipe.type === typeByFilter[filter]);\n\n  return (\n    <main className=\"receitas-container\">\n      <Header />\n      <section className=\"receitas-body\">\n        <section className=\"receitas-filters\">\n          <section className=\"done-fav-container\">\n            <button\n              data-testid=\"filter-by-all-btn\"\n              type=\"button\"\n              value=\"All\"\n              onClick={ () => setFilter('All') }\n            >\n              All\n            </button>\n            <button\n              data-testid=\"filter-by-food-btn\"\n              type=\"button\"\n              value=\"Foods\"\n              onClick={ () => setFilter('Foods') }\n            >\n              Food\n            </button>\n            <button\n              data-testid=\"filter-by-drink-btn\"\n              type=\"button\"\n              value=\"Drinks\"\n              onClick={ () => setFilter('Drinks') }\n            >\n              Drinks\n            </button>\n          </section>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <p>Nenhuma Receita Feita</p>\n            : (\n              feitas.map((feita, idx) => (\n                <CardFavorite\n                  pageType=\"recipes-done\"\n                  key={ idx }\n                  imagePath={ feita.image }\n                  itemName={ feita.name }\n                  id={ feita.id }\n                  itemType={ `${feita.type}s` }\n                  indexId={ idx }\n                  cardType=\"horizontal\"\n                  area={ feita.area }\n                  category={ feita.category }\n                  alcoholic={ feita.alcoholicOrNot }\n                  titlePage=\"Receitas Feitas\"\n                  date={ feita.doneDate }\n                  tagsRecipe={ feita.tags.map((tagName, idxTag) => (\n                    <button\n                      className=\"card-tags\"\n                      type=\"button\"\n                      key={ idxTag }\n                      data-testid={ `${idx}-${tagName}-horizontal-tag` }\n                    >\n                      <span className=\"tag\">{tagName}</span>\n                    </button>\n                  )) }\n                />\n              ))\n            )}\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport CardFavorite from '../components/CardFavorite';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction ReceitasFeitas() {\n  const { isFetching, setIsFetching, setTitleHeader, favoriteRecipes,\n    setDisabledSearchIcon, setShowSearchBar } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setTitleHeader('Receitas Favoritas');\n    setDisabledSearchIcon(true);\n    setShowSearchBar(false);\n    setIsFetching(true);\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [filter, setFilter] = useState('All');\n  const typeByFilter = { Foods: 'comida', Drinks: 'bebida' };\n  const feitas = (filter === 'All') ? favoriteRecipes : favoriteRecipes\n    .filter((recipe) => recipe.type === typeByFilter[filter]);\n\n  return (\n    <main className=\"receitas-container\">\n      <Header />\n      <section className=\"receitas-body\">\n        <section className=\"receitas-filters\">\n          <section className=\"done-fav-container\">\n            <button\n              data-testid=\"filter-by-all-btn\"\n              type=\"button\"\n              value=\"All\"\n              onClick={ () => setFilter('All') }\n            >\n              All\n            </button>\n            <button\n              data-testid=\"filter-by-food-btn\"\n              type=\"button\"\n              value=\"Foods\"\n              onClick={ () => setFilter('Foods') }\n            >\n              Food\n            </button>\n            <button\n              data-testid=\"filter-by-drink-btn\"\n              type=\"button\"\n              value=\"Drinks\"\n              onClick={ () => setFilter('Drinks') }\n            >\n              Drinks\n            </button>\n          </section>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching && feitas === []\n            ? <p>Nenhuma Receita Favorita</p>\n            : (\n              feitas.map((feita, idx) => (\n                <CardFavorite\n                  pageType=\"favorite-recipes\"\n                  key={ idx }\n                  imagePath={ feita.image }\n                  itemName={ feita.name }\n                  id={ feita.id }\n                  itemType={ `${feita.type}s` }\n                  indexId={ idx }\n                  cardType=\"horizontal\"\n                  area={ feita.area }\n                  category={ feita.category }\n                  alcoholic={ feita.alcoholicOrNot }\n                  titlePage=\"Receitas Favoritas\"\n                  date={ feita.doneDate }\n                />\n              ))\n            )}\n        </section>\n      </section>\n    </main>\n  );\n}\n\nexport default ReceitasFeitas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ReceitasContext from '../context/ReceitasContext';\n\nfunction PagePerfil() {\n  const { setDisabledSearchIcon,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [userEmail, setUserEmail] = useState('');\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Perfil');\n    setShowSearchBar(false);\n    const localStorageEmail = localStorage.getItem('user');\n    if (localStorageEmail) {\n      const { email } = JSON.parse(localStorageEmail);\n      setUserEmail(email);\n    }\n    setIsFetching(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"profile-container\">\n      <Header />\n      <section className=\"profile-body\">\n        <section className=\"profile-email\">\n          {!isFetching && <h3 data-testid=\"profile-email\">{userEmail}</h3>}\n        </section>\n        <section className=\"profile-buttons\">\n          <Link className=\"profile-link\" to=\"/receitas-favoritas\">\n            <button\n              data-testid=\"profile-favorite-btn\"\n              type=\"button\"\n              className=\"profile-btn\"\n            >\n              Receitas Favoritas\n            </button>\n          </Link>\n          <Link className=\"profile-link\" to=\"/receitas-feitas\">\n            <button\n              className=\"profile-btn\"\n              data-testid=\"profile-done-btn\"\n              type=\"button\"\n            >\n              Receitas Feitas\n            </button>\n          </Link>\n          <Link className=\"profile-link\" to=\"/\">\n            <button\n              data-testid=\"profile-logout-btn\"\n              type=\"button\"\n              className=\"profile-btn-sair\"\n              onClick={ () => localStorage.clear() }\n            >\n              Sair\n            </button>\n          </Link>\n        </section>\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nexport default PagePerfil;\n","import { Link } from 'react-router-dom';\nimport React, { useContext, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from '../context/ReceitasContext';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction Explorar({ requestAPI }) {\n  const { setDisabledSearchIcon,\n    setTitleHeader, setShowSearchBar,\n  } = useContext(ReceitasContext);\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"explorar-container\">\n      <Header\n        requestAPI={ requestAPI }\n      />\n      <section className=\"explorar-body\">\n        <Link\n          className=\"explorar-comidas-link\"\n          data-testid=\"explore-food\"\n          to=\"/explorar/comidas\"\n        >\n          Explorar Comidas\n        </Link>\n        <Link\n          className=\"explorar-bebidas-link\"\n          data-testid=\"explore-drinks\"\n          to=\"/explorar/bebidas\"\n        >\n          Explorar Bebidas\n        </Link>\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nExplorar.defaultProps = {\n  requestAPI: () => null,\n};\n\nExplorar.propTypes = {\n  requestAPI: propTypes.func,\n};\n\nexport default Explorar;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarBebidas() {\n  const { setDisabledSearchIcon, setIsFetching, isFetching,\n    setTitleHeader, setShowSearchBar,\n  } = useContext(ReceitasContext);\n  const [randomId, setRandomId] = useState('');\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar Bebidas');\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = await fetchDrink('random', '');\n      setRandomId(response[0].idDrink);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"explorar-container\">\n      <Header />\n      <section className=\"explorar-body\">\n        <Link\n          data-testid=\"explore-by-ingredient\"\n          to=\"/explorar/bebidas/ingredientes\"\n          className=\"explorar-bebidas-link\"\n        >\n          Por Ingredientes\n        </Link>\n        {!isFetching\n          ? (\n            <Link\n              data-testid=\"explore-surprise\"\n              to={ `/bebidas/${randomId}` }\n              className=\"explorar-bebidas-link\"\n            >\n              Me Surpreenda!\n            </Link>)\n          : null}\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nexport default ExplorarBebidas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarBebidasIngredientes() {\n  const { setDisabledSearchIcon, setFilterIngredient,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar Ingredientes');\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = await fetchDrink('listIngredient', '');\n      setIngredientes(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className=\"bebidas-container\">\n      <Header />\n      <section className=\"bebidas-body\">\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : ingredientes.map((drink, index) => (\n              index < twelve\n                ? (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-card` }\n                  >\n                    <div className=\"recomended-datails-ingredient\">\n                      <Link\n                        className=\"recomended-details-link\"\n                        to=\"/bebidas\"\n                        onClick={ () => setFilterIngredient(drink.strIngredient1) }\n                      >\n                        <div className=\"recomended-img-body\">\n                          <img\n                            data-testid={ `${index}-card-img` }\n                            alt=\"recipe cover\"\n                            className=\"recomended-image\"\n                            src={ `https://www.thecocktaildb.com/images/ingredients/${drink.strIngredient1}-Small.png` }\n                          />\n                        </div>\n                        <div\n                          className=\"recomended-info\"\n                        >\n                          <h4\n                            data-testid={ `${index}-card-name` }\n                            className=\"recomended-title\"\n                          >\n                            {drink.strIngredient1}\n                          </h4>\n                        </div>\n                      </Link>\n                    </div>\n                  </div>\n                )\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default ExplorarBebidasIngredientes;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidas() {\n  const { setDisabledSearchIcon, setIsFetching, isFetching,\n    setTitleHeader, setShowSearchBar,\n  } = useContext(ReceitasContext);\n  const [randomId, setRandomId] = useState('');\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar Comidas');\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = await fetchFood('random', '');\n      setRandomId(response[0].idMeal);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"explorar-container\">\n      <Header />\n      <section className=\"explorar-body\">\n        <Link\n          data-testid=\"explore-by-ingredient\"\n          to=\"/explorar/comidas/ingredientes\"\n          className=\"explorar-comidas-link\"\n        >\n          Por Ingredientes\n        </Link>\n        <Link\n          data-testid=\"explore-by-area\"\n          to=\"/explorar/comidas/area\"\n          className=\"explorar-comidas-link\"\n        >\n          Por Local de Origem\n        </Link>\n        {!isFetching\n          ? (\n            <Link\n              data-testid=\"explore-surprise\"\n              to={ `/comidas/${randomId}` }\n              className=\"explorar-comidas-link\"\n            >\n              Me Surpreenda!\n            </Link>)\n          : null}\n      </section>\n      <Footer />\n    </section>\n  );\n}\n\nexport default ExplorarComidas;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidasIngredientes() {\n  const { setDisabledSearchIcon, setFilterIngredient,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [ingredientes, setIngredientes] = useState([]);\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(true);\n    setTitleHeader('Explorar Ingredientes');\n    setShowSearchBar(false);\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = await fetchFood('listIngredient', '');\n      setIngredientes(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className=\"comidas-container\">\n      <Header />\n      <section className=\"comidas-body\">\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : ingredientes.map((meal, index) => (\n              index < twelve\n                ? (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-card` }\n                  >\n                    <div className=\"recomended-datails-ingredient\">\n                      <Link\n                        className=\"recomended-details-link\"\n                        to=\"/comidas\"\n                        onClick={ () => setFilterIngredient(meal.strIngredient) }\n                      >\n                        <div className=\"recomended-img-body\">\n                          <img\n                            data-testid={ `${index}-card-img` }\n                            alt=\"recipe cover\"\n                            className=\"recomended-image\"\n                            src={ `https://www.themealdb.com/images/ingredients/${meal.strIngredient}-Small.png` }\n                          />\n                        </div>\n                        <div\n                          className=\"recomended-info\"\n                        >\n                          <h4\n                            data-testid={ `${index}-card-name` }\n                            className=\"recomended-title\"\n                          >\n                            {meal.strIngredient}\n                          </h4>\n                        </div>\n                      </Link>\n                    </div>\n                  </div>\n                )\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default ExplorarComidasIngredientes;\n","import React, { useContext, useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport Card from '../components/Card';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\n\nfunction ExplorarComidasPorLocalOrigem() {\n  const { setDisabledSearchIcon, setRecipesMeals, recipesMeals,\n    setTitleHeader, setShowSearchBar,\n    isFetching, setIsFetching } = useContext(ReceitasContext);\n  const [areas, setAreas] = useState([]);\n  const [filterArea, setFilterArea] = useState('');\n  const twelve = 12;\n\n  useEffect(() => {\n    setDisabledSearchIcon(false);\n    setTitleHeader('Explorar Origem');\n    setShowSearchBar(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (filterArea === '' || filterArea === 'All')\n        ? await fetchFood('itemName', '')\n        : await fetchFood('filterByArea', filterArea);\n      const areasOption = await fetchFood('byArea', '');\n      setAreas(areasOption);\n      setRecipesMeals(response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filterArea]);\n\n  return (\n    <main className=\"comidas-container\">\n      <Header />\n      <section className=\"comidas-body\">\n        <section className=\"comidas-origin\">\n          <select\n            onChange={ ({ target }) => setFilterArea(target.value) }\n            data-testid=\"explore-by-area-dropdown\"\n            className=\"comidas-select\"\n          >\n            <option value=\"Pesquise por Area\">Pesquise por Area</option>\n            <option data-testid=\"All-option\" value=\"All\">All</option>\n            {isFetching\n              ? ''\n              : areas.map((area, idx) => (\n                <option\n                  data-testid={ `${area.strArea}-option` }\n                  key={ idx }\n                  value={ area.strArea }\n                >\n                  {area.strArea}\n                </option>\n              ))}\n          </select>\n        </section>\n        <section className=\"cards-list\">\n          {isFetching\n            ? <h2>Loading...</h2>\n            : recipesMeals.map((meal, index) => (\n              index < twelve ? <Card\n                indexId={ index }\n                key={ index }\n                imagePath={ meal.strMealThumb }\n                itemName={ meal.strMeal }\n                id={ meal.idMeal }\n                itemType=\"comidas\"\n                cardType=\"recipe\"\n              />\n                : null\n            ))}\n        </section>\n      </section>\n      <Footer />\n    </main>\n  );\n}\n\nexport default ExplorarComidasPorLocalOrigem;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not Found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport ListaIngredientesEmProgresso from './ListaIngredientesEmProgresso';\nimport ReceitasContext from '../context/ReceitasContext';\nimport fetchFood from '../servicesAPI/foodAPI';\nimport fetchDrink from '../servicesAPI/drinkAPI';\nimport FavoriteShareButtons from '../components/FavoriteShareButtons';\n\nfunction ReceitaEmProgresso({ match }) {\n  const { setIsFetching, isFetching, keyProps,\n    setRecipeGlobal } = useContext(ReceitasContext);\n  const type = (match.path.match('comidas')) ? 'meal' : 'drink';\n  const [recipe, setRecipe] = useState([]);\n  const { id } = match.params;\n\n  useEffect(() => {\n    setIsFetching(true);\n    const firstRequestAPI = async () => {\n      const response = (type === 'meal')\n        ? await fetchFood('byId', id)\n        : await fetchDrink('byId', id);\n      setRecipe(...response);\n      setRecipeGlobal(...response);\n      setIsFetching(false);\n    };\n    firstRequestAPI();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className=\"detalhes-main\">\n      {isFetching\n        ? <h2>Loading...</h2>\n        : (\n          <div>\n            <header className=\"detalhes-header\">\n              <section className=\"detalhes-img\">\n                <section className=\"detalhes-img-border\">\n                  <img\n                    data-testid=\"recipe-photo\"\n                    src={ recipe[`str${keyProps[type]}Thumb`] }\n                    alt=\"\"\n                  />\n                </section>\n              </section>\n              <section className=\"detalhes-bar\">\n                <h3 data-testid=\"recipe-title\" className=\"detalhes-title\">\n                  { recipe[`str${keyProps[type]}`] }\n                </h3>\n                <h4 data-testid=\"recipe-category\" className=\"detalhes-subtitle\">\n                  { recipe[type === 'meal' ? 'strCategory' : 'strAlcoholic'] }\n                </h4>\n                <FavoriteShareButtons recipeId={ id } type={ type } />\n              </section>\n            </header>\n            <article className=\"detalhes-article\">\n              { recipe !== '' ? (\n                <ListaIngredientesEmProgresso recipe={ recipe } type={ type } />\n              ) : <p>Loading...</p>}\n              <hr />\n              <section className=\"detalhes-instructions-container\">\n                <h4 className=\"detalhes-titles\">Instruções de preparo</h4>\n                <section className=\"detalhes-instructions\">\n                  <p data-testid=\"instructions\">{recipe.strInstructions}</p>\n                </section>\n              </section>\n            </article>\n          </div>\n        )}\n    </main>\n  );\n}\n\nReceitaEmProgresso.propTypes = {\n  match: propTypes.shape({\n    isExact: propTypes.bool,\n    params: propTypes.shape({\n      id: propTypes.string,\n      path: propTypes.string,\n      url: propTypes.string,\n    }),\n    path: propTypes.string,\n    url: propTypes.string,\n  }).isRequired,\n};\n\nexport default ReceitaEmProgresso;\n","import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport ReceitasContext from './ReceitasContext';\n\nfunction ReceitasProvider({ children }) {\n  const [email, setEmail] = useState('');\n  const [hidden, setHidden] = useState(true);\n  const [isFetching, setIsFetching] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [recipesMeals, setRecipesMeals] = useState([]);\n  const [recipesDrinks, setRecipesDrinks] = useState([]);\n  const [searchType, setSearchType] = useState('ingredient');\n  const [disabledProfileIcon, setDisabledProfileIcon] = useState(false);\n  const [disabledSearchIcon, setDisabledSearchIcon] = useState(false);\n  const [titleHeader, setTitleHeader] = useState('');\n  const [showSearchBar, setShowSearchBar] = useState(false);\n  const [filterFood, setFilterFood] = useState('');\n  const [filterIngredient, setFilterIngredient] = useState('');\n  const [filterDrink, setFilterDrink] = useState('');\n  const [executeFilter, setExecuteFilter] = useState(false);\n  const [filterDisabled, setFilterDisabled] = useState(false);\n  const [recipeGlobal, setRecipeGlobal] = useState('');\n\n  const [recipesDone, setRecipesDone] = useState([]);\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\n  const [recipesInProgress, setRecipesInProgress] = useState({\n    cocktails: {},\n    meals: {},\n  });\n\n  const keyProps = { meal: 'Meal', drink: 'Drink' };\n  const keyURL = { meal: 'comidas', drink: 'bebidas' };\n  const keyObj = { meal: 'meals', drink: 'drinks' };\n\n  // RECOVER====================================================================\n  const [isRecovering, setIsRecovering] = useState(true);\n\n  // Mount\n  // Adicionar 1 if dentro do Mount para cada estado global necessário\n  useEffect(() => {\n    // Receitas em progresso\n    const recipesInProgLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (recipesInProgLS !== null && isRecovering) setRecipesInProgress(recipesInProgLS);\n\n    // Receitas feitas\n    const recipesDoneLS = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (recipesDoneLS !== null && isRecovering) setRecipesDone(recipesDoneLS);\n\n    // Receitas favoritas\n    const favoriteRecipesLS = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipesLS !== null && isRecovering) setFavoriteRecipes(favoriteRecipesLS);\n\n    setIsRecovering(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Update\n  // Replicar 1 Update para cada estado global necessário\n\n  // Receitas em progresso\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipesInProgress]);\n\n  // Receitas feitas\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('doneRecipes', JSON.stringify(recipesDone));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipesDone]);\n\n  // Receitas favoritas\n  useEffect(() => {\n    if (!isRecovering) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [favoriteRecipes]);\n\n  // ===========================================================================\n\n  function renderEmail(param) {\n    return (\n      <div>\n        {param\n          ? (\n            <p data-testid=\"profile-email\">{email}</p>\n          )\n          : (\n            <h3 data-testid=\"profile-email\">\n              {JSON.parse(localStorage.getItem('user')).email}\n            </h3>\n          )}\n      </div>\n    );\n  }\n\n  const contextValue = {\n    email,\n    setEmail,\n    hidden,\n    setHidden,\n    searchType,\n    setSearchType,\n    recipesMeals,\n    setRecipesMeals,\n    recipesDrinks,\n    setRecipesDrinks,\n    disabledProfileIcon,\n    setDisabledProfileIcon,\n    disabledSearchIcon,\n    setDisabledSearchIcon,\n    titleHeader,\n    setTitleHeader,\n    showSearchBar,\n    setShowSearchBar,\n    searchInput,\n    setSearchInput,\n    isFetching,\n    setIsFetching,\n    filterFood,\n    setFilterFood,\n    filterIngredient,\n    setFilterIngredient,\n    filterDrink,\n    setFilterDrink,\n    executeFilter,\n    setExecuteFilter,\n    filterDisabled,\n    setFilterDisabled,\n    recipesDone,\n    setRecipesDone,\n    recipesInProgress,\n    setRecipesInProgress,\n    keyProps,\n    keyObj,\n    keyURL,\n    renderEmail,\n    favoriteRecipes,\n    setFavoriteRecipes,\n    isRecovering,\n    recipeGlobal,\n    setRecipeGlobal,\n  };\n\n  return (\n    <ReceitasContext.Provider value={ contextValue }>\n      {children}\n    </ReceitasContext.Provider>\n  );\n}\n\nReceitasProvider.propTypes = {\n  children: propTypes.node.isRequired,\n};\n\nexport default ReceitasProvider;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport {\n  Login, Comidas, Perfil, Explorar, Bebidas, ReceitasFeitas,\n  ReceitasFavoritas, ExplorarComidas, ExplorarBebidas,\n  ExplorarBebidasIngredientes, ExplorarComidasIngredientes,\n  ExplorarComidasPorLocalOrigem, ReceitaDetalhada } from './pages';\nimport NotFound from './pages/NotFound';\nimport ReceitaEmProgresso from './pages/ReceitaEmProgresso';\nimport ReceitasProvider from './context/ReceitasProvider';\n\nimport './stylesCSS/RecomendedResponsive.css';\nimport './stylesCSS/DetalhesResponsive.css';\nimport './stylesCSS/ReceitasDoneFav.css';\nimport './stylesCSS/ResponsiveApp.css';\nimport './stylesCSS/ExplorarPages.css';\nimport './stylesCSS/PageDetalhada.css';\nimport './stylesCSS/InitialPages.css';\nimport './stylesCSS/Recomended.css';\nimport './stylesCSS/Profile.css';\nimport './stylesCSS/Login.css';\nimport './stylesCSS/Card.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <ReceitasProvider>\n      <Switch>\n        <Route\n          path=\"/bebidas/:id/in-progress\"\n          component={ ReceitaEmProgresso }\n        />\n        <Route\n          path=\"/comidas/:id/in-progress\"\n          component={ ReceitaEmProgresso }\n        />\n        <Route path=\"/comidas/:id\" component={ ReceitaDetalhada } />\n        <Route path=\"/bebidas/:id\" component={ ReceitaDetalhada } />\n        <Route path=\"/comidas\" component={ Comidas } />\n        <Route path=\"/bebidas\" component={ Bebidas } />\n        <Route\n          path=\"/explorar/comidas/ingredientes\"\n          component={ ExplorarComidasIngredientes }\n        />\n        <Route\n          path=\"/explorar/bebidas/ingredientes\"\n          component={ ExplorarBebidasIngredientes }\n        />\n        <Route\n          path=\"/explorar/comidas/area\"\n          component={ ExplorarComidasPorLocalOrigem }\n        />\n        <Route\n          path=\"/explorar/bebidas/area\"\n          component={ NotFound }\n        />\n        <Route path=\"/receitas-feitas\" component={ ReceitasFeitas } />\n        <Route path=\"/receitas-favoritas\" component={ ReceitasFavoritas } />\n        <Route path=\"/perfil\" component={ Perfil } />\n        <Route path=\"/explorar/comidas\" component={ ExplorarComidas } />\n        <Route path=\"/explorar/bebidas\" component={ ExplorarBebidas } />\n        <Route path=\"/explorar\" component={ Explorar } />\n        <Route exact path=\"/\" component={ Login } />\n      </Switch>\n    </ReceitasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}